// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using TodoApi.Models;

namespace TodoApi.Migrations
{
    [DbContext(typeof(TodoContext))]
    [Migration("20181228203145_HashPassword_Migracion")]
    partial class HashPassword_Migracion
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn)
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("TodoApi.Controllers.Usuario", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Apellido");

                    b.Property<DateTime?>("FechaNacimiento");

                    b.Property<byte[]>("HashPassword")
                        .IsRequired();

                    b.Property<string>("Nombre");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(64);

                    b.HasKey("Id");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("TodoApi.Models.Prioridad", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Descripcion")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("Prioridades");

                    b.HasData(
                        new { Id = 1L, Descripcion = "Baja" },
                        new { Id = 2L, Descripcion = "Media" },
                        new { Id = 3L, Descripcion = "Alta" }
                    );
                });

            modelBuilder.Entity("TodoApi.Models.Tarea", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Completado");

                    b.Property<string>("Descripcion");

                    b.Property<DateTime?>("FechaVencimiento");

                    b.Property<long?>("IdPrioridad");

                    b.Property<long?>("IdUsuario");

                    b.Property<string>("Nombre")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("IdPrioridad");

                    b.HasIndex("IdUsuario");

                    b.ToTable("Tareas");
                });

            modelBuilder.Entity("TodoApi.Models.Tarea", b =>
                {
                    b.HasOne("TodoApi.Models.Prioridad", "Prioridad")
                        .WithMany()
                        .HasForeignKey("IdPrioridad")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("TodoApi.Controllers.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("IdUsuario")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
